name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: receipt # GitHub Environment 'receipt' を使用
    permissions:
      contents: 'read' # コードのチェックアウトに必要

    env:
      SERVICE_NAME: receipt-image # イメージ名 (Cloud Runのサービス名と合わせる)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }} # サービスアカウントキーのJSONをSecretから読み込む

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ vars.GAR_DNS }} # Environment変数 GAR_DNS を使用

      - name: Create .env file for server
        run: |
          echo "DB_USER=${{ secrets.CLOUDSQL_USER }}" > server/.env
          echo "DB_PASS=${{ secrets.CLOUDSQL_PASS }}" >> server/.env
          echo "DB_NAME=${{ secrets.CLOUDSQL_NAME }}" >> server/.env
          echo "DB_HOST=${{ secrets.CLOUDSQL_HOST }}" >> server/.env
          echo "DB_PORT=${{ secrets.CLOUDSQL_PORT }}" >> server/.env
          echo "GCS_BUCKET_NAME=${{ secrets.GCS_BUCKET_NAME }}" >> server/.env
        shell: bash

      - name: Build and push Docker image
        run: |
          # Construct the full image path using Environment variable GAR_FULL_PATH and job env variable SERVICE_NAME
          # This will result in something like: asia-northeast1-docker.pkg.dev/uni10kuu/receipt/receipt
          IMAGE_FULL_PATH="${{ vars.GAR_FULL_PATH }}/${{ env.SERVICE_NAME }}"
          TAG_SHA="${{ github.sha }}"
          TAG_LATEST="latest"

          echo "Building image with tags: ${TAG_SHA} and ${TAG_LATEST}"
          # Build with both SHA tag and latest tag using the full GAR path
          docker build -t "${IMAGE_FULL_PATH}:${TAG_SHA}" -t "${IMAGE_FULL_PATH}:${TAG_LATEST}" -f server/Dockerfile server

          echo "Pushing image with tags: ${TAG_SHA} and ${TAG_LATEST}"
          # Push both tags
          docker push "${IMAGE_FULL_PATH}:${TAG_SHA}"
          docker push "${IMAGE_FULL_PATH}:${TAG_LATEST}"
          echo "Image pushed: ${IMAGE_FULL_PATH}:${TAG_SHA} and ${IMAGE_FULL_PATH}:${TAG_LATEST}"